<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Dodge the Squares</title>
  <style>
    body {
      margin: 0;
      background: #111;
      color: white;
      font-family: 'Arial', sans-serif;
      text-align: center;
    }

    canvas {
      display: block;
      margin: auto;
      background: #222;
      border: 2px solid #fff;
    }

    #overlay {
      position: absolute;
      top: 20px;
      width: 100%;
      text-align: center;
      font-size: 24px;
    }

    #gameOver {
      display: none;
      font-size: 36px;
      color: red;
      margin-top: 20px;
    }

    button {
      padding: 10px 20px;
      font-size: 18px;
      margin-top: 10px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="overlay">
    Score: <span id="score">0</span>
    <div id="gameOver">
      Game Over<br/>
      <button onclick="restartGame()">Restart</button>
    </div>
  </div>
  <canvas id="gameCanvas" width="500" height="600"></canvas>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");

    const player = {
      x: 230,
      y: 560,
      radius: 15,
      speed: 5
    };

    let leftPressed = false;
    let rightPressed = false;

    let squares = [];
    let squareSpeed = 2;
    let score = 0;
    let gameOver = false;

    function drawPlayer() {
      ctx.beginPath();
      ctx.arc(player.x, player.y, player.radius, 0, Math.PI * 2);
      ctx.fillStyle = "#00FF88";
      ctx.fill();
      ctx.closePath();
    }

    function drawSquare(square) {
      ctx.fillStyle = "#FF5555";
      ctx.fillRect(square.x, square.y, square.size, square.size);
    }

    function updateSquares() {
      for (let i = 0; i < squares.length; i++) {
        squares[i].y += squareSpeed;
        if (
          squares[i].y + squares[i].size >= player.y - player.radius &&
          squares[i].y <= player.y + player.radius &&
          squares[i].x < player.x + player.radius &&
          squares[i].x + squares[i].size > player.x - player.radius
        ) {
          endGame();
        }

        if (squares[i].y > canvas.height) {
          squares.splice(i, 1);
          i--;
          score++;
          document.getElementById("score").innerText = score;
          if (score % 10 === 0) {
            squareSpeed += 0.5; // increase difficulty
          }
        }
      }
    }

    function spawnSquare() {
      const size = 30;
      const x = Math.random() * (canvas.width - size);
      squares.push({ x, y: -size, size });
    }

    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawPlayer();
      squares.forEach(drawSquare);
    }

    function movePlayer() {
      if (leftPressed && player.x - player.radius > 0) {
        player.x -= player.speed;
      }
      if (rightPressed && player.x + player.radius < canvas.width) {
        player.x += player.speed;
      }
    }

    function gameLoop() {
      if (gameOver) return;
      movePlayer();
      updateSquares();
      draw();
      requestAnimationFrame(gameLoop);
    }

    function endGame() {
      gameOver = true;
      document.getElementById("gameOver").style.display = "block";
    }

    function restartGame() {
      player.x = 230;
      squares = [];
      squareSpeed = 2;
      score = 0;
      document.getElementById("score").innerText = score;
      document.getElementById("gameOver").style.display = "none";
      gameOver = false;
      gameLoop();
    }

    document.addEventListener("keydown", e => {
      if (e.key === "ArrowLeft") leftPressed = true;
      if (e.key === "ArrowRight") rightPressed = true;
    });

    document.addEventListener("keyup", e => {
      if (e.key === "ArrowLeft") leftPressed = false;
      if (e.key === "ArrowRight") rightPressed = false;
    });

    setInterval(() => {
      if (!gameOver) spawnSquare();
    }, 700);

    // Start game
    gameLoop();
  </script>
</body>
</html>
